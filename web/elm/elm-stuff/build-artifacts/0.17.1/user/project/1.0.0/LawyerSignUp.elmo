var _user$project$LawyerSignUp$barListHeader = A2(
	_elm_lang$html$Html$header,
	_elm_lang$core$Native_List.fromArray(
		[]),
	_elm_lang$core$Native_List.fromArray(
		[
			A2(
			_elm_lang$html$Html$div,
			_elm_lang$core$Native_List.fromArray(
				[]),
			_elm_lang$core$Native_List.fromArray(
				[
					_elm_lang$html$Html$text('Bar ID')
				])),
			A2(
			_elm_lang$html$Html$div,
			_elm_lang$core$Native_List.fromArray(
				[]),
			_elm_lang$core$Native_List.fromArray(
				[
					_elm_lang$html$Html$text('Bar State')
				]))
		]));
var _user$project$LawyerSignUp$removeBarId = F2(
	function (model, barId) {
		var profile = model.profile;
		var barList = profile.barList;
		var newBarList = A2(
			_elm_lang$core$List$filter,
			function (p) {
				return !_elm_lang$core$Native_Utils.eq(p.barId, barId.barId);
			},
			barList);
		return _elm_lang$core$Native_Utils.update(
			model,
			{
				profile: _elm_lang$core$Native_Utils.update(
					profile,
					{barList: newBarList})
			});
	});
var _user$project$LawyerSignUp$initModel = {
	account: {firstName: '', lastName: '', emailAddress: '', phoneNumber: '', password: '', passwordConfirm: ''},
	profile: {
		currentBarId: '',
		currentBarState: '',
		barList: _elm_lang$core$Native_List.fromArray(
			[])
	}
};
var _user$project$LawyerSignUp$Model = F2(
	function (a, b) {
		return {account: a, profile: b};
	});
var _user$project$LawyerSignUp$Account = F6(
	function (a, b, c, d, e, f) {
		return {firstName: a, lastName: b, emailAddress: c, phoneNumber: d, password: e, passwordConfirm: f};
	});
var _user$project$LawyerSignUp$LawyerProfile = F3(
	function (a, b, c) {
		return {currentBarId: a, currentBarState: b, barList: c};
	});
var _user$project$LawyerSignUp$BarId = F2(
	function (a, b) {
		return {barId: a, barState: b};
	});
var _user$project$LawyerSignUp$update = F2(
	function (msg, model) {
		var _p0 = msg;
		switch (_p0.ctor) {
			case 'FirstNameInput':
				var account = model.account;
				return _elm_lang$core$Native_Utils.update(
					model,
					{
						account: _elm_lang$core$Native_Utils.update(
							account,
							{firstName: _p0._0})
					});
			case 'LastNameInput':
				var account = model.account;
				return _elm_lang$core$Native_Utils.update(
					model,
					{
						account: _elm_lang$core$Native_Utils.update(
							account,
							{lastName: _p0._0})
					});
			case 'EmailAddressInput':
				var account = model.account;
				return _elm_lang$core$Native_Utils.update(
					model,
					{
						account: _elm_lang$core$Native_Utils.update(
							account,
							{emailAddress: _p0._0})
					});
			case 'PhoneNumberInput':
				var account = model.account;
				return _elm_lang$core$Native_Utils.update(
					model,
					{
						account: _elm_lang$core$Native_Utils.update(
							account,
							{phoneNumber: _p0._0})
					});
			case 'PasswordInput':
				var account = model.account;
				return _elm_lang$core$Native_Utils.update(
					model,
					{
						account: _elm_lang$core$Native_Utils.update(
							account,
							{password: _p0._0})
					});
			case 'PasswordConfirmInput':
				var account = model.account;
				return _elm_lang$core$Native_Utils.update(
					model,
					{
						account: _elm_lang$core$Native_Utils.update(
							account,
							{passwordConfirm: _p0._0})
					});
			case 'BarIdInput':
				var profile = model.profile;
				return _elm_lang$core$Native_Utils.update(
					model,
					{
						profile: _elm_lang$core$Native_Utils.update(
							profile,
							{currentBarId: _p0._0})
					});
			case 'BarStateInput':
				var profile = model.profile;
				return _elm_lang$core$Native_Utils.update(
					model,
					{
						profile: _elm_lang$core$Native_Utils.update(
							profile,
							{currentBarState: _p0._0})
					});
			case 'AddBarId':
				var profile = model.profile;
				var newBarItem = A2(_user$project$LawyerSignUp$BarId, profile.currentBarId, profile.currentBarState);
				return _elm_lang$core$Native_Utils.update(
					model,
					{
						profile: _elm_lang$core$Native_Utils.update(
							profile,
							{
								currentBarId: '',
								currentBarState: '',
								barList: A2(_elm_lang$core$List_ops['::'], newBarItem, profile.barList)
							})
					});
			default:
				return A2(_user$project$LawyerSignUp$removeBarId, model, _p0._0);
		}
	});
var _user$project$LawyerSignUp$RemoveBarId = function (a) {
	return {ctor: 'RemoveBarId', _0: a};
};
var _user$project$LawyerSignUp$barItem = function (item) {
	return A2(
		_elm_lang$html$Html$li,
		_elm_lang$core$Native_List.fromArray(
			[]),
		_elm_lang$core$Native_List.fromArray(
			[
				A2(
				_elm_lang$html$Html$i,
				_elm_lang$core$Native_List.fromArray(
					[
						_elm_lang$html$Html_Attributes$class('remove'),
						_elm_lang$html$Html_Events$onClick(
						_user$project$LawyerSignUp$RemoveBarId(item))
					]),
				_elm_lang$core$Native_List.fromArray(
					[])),
				A2(
				_elm_lang$html$Html$div,
				_elm_lang$core$Native_List.fromArray(
					[]),
				_elm_lang$core$Native_List.fromArray(
					[
						_elm_lang$html$Html$text(item.barId)
					])),
				A2(
				_elm_lang$html$Html$div,
				_elm_lang$core$Native_List.fromArray(
					[]),
				_elm_lang$core$Native_List.fromArray(
					[
						_elm_lang$html$Html$text(item.barState)
					]))
			]));
};
var _user$project$LawyerSignUp$barList = function (model) {
	var profile = model.profile;
	return A2(
		_elm_lang$html$Html$ul,
		_elm_lang$core$Native_List.fromArray(
			[]),
		A2(_elm_lang$core$List$map, _user$project$LawyerSignUp$barItem, profile.barList));
};
var _user$project$LawyerSignUp$AddBarId = {ctor: 'AddBarId'};
var _user$project$LawyerSignUp$BarStateInput = function (a) {
	return {ctor: 'BarStateInput', _0: a};
};
var _user$project$LawyerSignUp$BarIdInput = function (a) {
	return {ctor: 'BarIdInput', _0: a};
};
var _user$project$LawyerSignUp$profileSection = function (model) {
	return A2(
		_elm_lang$html$Html$div,
		_elm_lang$core$Native_List.fromArray(
			[
				_elm_lang$html$Html_Attributes$class('pure-g')
			]),
		_elm_lang$core$Native_List.fromArray(
			[
				A2(
				_elm_lang$html$Html$div,
				_elm_lang$core$Native_List.fromArray(
					[
						_elm_lang$html$Html_Attributes$class('pure-u-1 pure-u-md-1-3')
					]),
				_elm_lang$core$Native_List.fromArray(
					[
						A2(
						_elm_lang$html$Html$label,
						_elm_lang$core$Native_List.fromArray(
							[
								_elm_lang$html$Html_Attributes$for('barId')
							]),
						_elm_lang$core$Native_List.fromArray(
							[
								_elm_lang$html$Html$text('Bar ID')
							])),
						A2(
						_elm_lang$html$Html$input,
						_elm_lang$core$Native_List.fromArray(
							[
								_elm_lang$html$Html_Attributes$class('pure-u-23-24'),
								_elm_lang$html$Html_Attributes$id('barId'),
								_elm_lang$html$Html_Attributes$type$('text'),
								_elm_lang$html$Html_Events$onInput(_user$project$LawyerSignUp$BarIdInput),
								_elm_lang$html$Html_Attributes$value(model.profile.currentBarId)
							]),
						_elm_lang$core$Native_List.fromArray(
							[]))
					])),
				A2(
				_elm_lang$html$Html$div,
				_elm_lang$core$Native_List.fromArray(
					[
						_elm_lang$html$Html_Attributes$class('pure-u-1 pure-u-md-1-3')
					]),
				_elm_lang$core$Native_List.fromArray(
					[
						A2(
						_elm_lang$html$Html$label,
						_elm_lang$core$Native_List.fromArray(
							[
								_elm_lang$html$Html_Attributes$for('barState')
							]),
						_elm_lang$core$Native_List.fromArray(
							[
								_elm_lang$html$Html$text('State Barred In')
							])),
						A2(
						_elm_lang$html$Html$select,
						_elm_lang$core$Native_List.fromArray(
							[
								_elm_lang$html$Html_Events$onInput(_user$project$LawyerSignUp$BarStateInput),
								_elm_lang$html$Html_Attributes$value(model.profile.currentBarState)
							]),
						_elm_lang$core$Native_List.fromArray(
							[
								A2(
								_elm_lang$html$Html$option,
								_elm_lang$core$Native_List.fromArray(
									[]),
								_elm_lang$core$Native_List.fromArray(
									[
										_elm_lang$html$Html$text('')
									])),
								A2(
								_elm_lang$html$Html$option,
								_elm_lang$core$Native_List.fromArray(
									[]),
								_elm_lang$core$Native_List.fromArray(
									[
										_elm_lang$html$Html$text('New York')
									])),
								A2(
								_elm_lang$html$Html$option,
								_elm_lang$core$Native_List.fromArray(
									[]),
								_elm_lang$core$Native_List.fromArray(
									[
										_elm_lang$html$Html$text('Massachusetts')
									])),
								A2(
								_elm_lang$html$Html$option,
								_elm_lang$core$Native_List.fromArray(
									[]),
								_elm_lang$core$Native_List.fromArray(
									[
										_elm_lang$html$Html$text('New Hampshire')
									])),
								A2(
								_elm_lang$html$Html$option,
								_elm_lang$core$Native_List.fromArray(
									[]),
								_elm_lang$core$Native_List.fromArray(
									[
										_elm_lang$html$Html$text('Pennsylvania')
									])),
								A2(
								_elm_lang$html$Html$option,
								_elm_lang$core$Native_List.fromArray(
									[]),
								_elm_lang$core$Native_List.fromArray(
									[
										_elm_lang$html$Html$text('Rhode Island')
									])),
								A2(
								_elm_lang$html$Html$option,
								_elm_lang$core$Native_List.fromArray(
									[]),
								_elm_lang$core$Native_List.fromArray(
									[
										_elm_lang$html$Html$text('Vermont')
									]))
							]))
					])),
				A2(
				_elm_lang$html$Html$div,
				_elm_lang$core$Native_List.fromArray(
					[
						_elm_lang$html$Html_Attributes$class('pure-u-1 pure-u-md-1-3'),
						_elm_lang$html$Html_Attributes$style(
						_elm_lang$core$Native_List.fromArray(
							[
								{ctor: '_Tuple2', _0: 'text-align', _1: 'left'}
							]))
					]),
				_elm_lang$core$Native_List.fromArray(
					[
						A2(
						_elm_lang$html$Html$label,
						_elm_lang$core$Native_List.fromArray(
							[]),
						_elm_lang$core$Native_List.fromArray(
							[
								_elm_lang$html$Html$text(_krisajenkins$elm_exts$Exts_Html$nbsp)
							])),
						A2(
						_elm_lang$html$Html$button,
						_elm_lang$core$Native_List.fromArray(
							[
								_elm_lang$html$Html_Attributes$class('pure-button'),
								_elm_lang$html$Html_Attributes$type$('button'),
								_elm_lang$html$Html_Events$onClick(_user$project$LawyerSignUp$AddBarId)
							]),
						_elm_lang$core$Native_List.fromArray(
							[
								_elm_lang$html$Html$text(' + ')
							]))
					])),
				A2(
				_elm_lang$html$Html$div,
				_elm_lang$core$Native_List.fromArray(
					[
						_elm_lang$html$Html_Attributes$class('pure-u-1 pure-u-md-1-2')
					]),
				_elm_lang$core$Native_List.fromArray(
					[
						_user$project$LawyerSignUp$barListHeader,
						A2(
						_elm_lang$html$Html$div,
						_elm_lang$core$Native_List.fromArray(
							[
								_elm_lang$html$Html_Attributes$class('pure-u-1 pure-u-md-1-2')
							]),
						_elm_lang$core$Native_List.fromArray(
							[
								_user$project$LawyerSignUp$barList(model)
							]))
					]))
			]));
};
var _user$project$LawyerSignUp$PasswordConfirmInput = function (a) {
	return {ctor: 'PasswordConfirmInput', _0: a};
};
var _user$project$LawyerSignUp$PasswordInput = function (a) {
	return {ctor: 'PasswordInput', _0: a};
};
var _user$project$LawyerSignUp$PhoneNumberInput = function (a) {
	return {ctor: 'PhoneNumberInput', _0: a};
};
var _user$project$LawyerSignUp$EmailAddressInput = function (a) {
	return {ctor: 'EmailAddressInput', _0: a};
};
var _user$project$LawyerSignUp$LastNameInput = function (a) {
	return {ctor: 'LastNameInput', _0: a};
};
var _user$project$LawyerSignUp$FirstNameInput = function (a) {
	return {ctor: 'FirstNameInput', _0: a};
};
var _user$project$LawyerSignUp$accountSection = function (model) {
	return A2(
		_elm_lang$html$Html$div,
		_elm_lang$core$Native_List.fromArray(
			[
				_elm_lang$html$Html_Attributes$class('pure-g')
			]),
		_elm_lang$core$Native_List.fromArray(
			[
				A2(
				_elm_lang$html$Html$div,
				_elm_lang$core$Native_List.fromArray(
					[
						_elm_lang$html$Html_Attributes$class('pure-u-1 pure-u-md-1-2')
					]),
				_elm_lang$core$Native_List.fromArray(
					[
						A2(
						_elm_lang$html$Html$label,
						_elm_lang$core$Native_List.fromArray(
							[
								_elm_lang$html$Html_Attributes$for('firstName')
							]),
						_elm_lang$core$Native_List.fromArray(
							[
								_elm_lang$html$Html$text('First Name')
							])),
						A2(
						_elm_lang$html$Html$input,
						_elm_lang$core$Native_List.fromArray(
							[
								_elm_lang$html$Html_Attributes$class('pure-u-23-24'),
								_elm_lang$html$Html_Attributes$id('firstName'),
								_elm_lang$html$Html_Attributes$type$('text'),
								_elm_lang$html$Html_Events$onInput(_user$project$LawyerSignUp$FirstNameInput),
								_elm_lang$html$Html_Attributes$value(model.account.firstName)
							]),
						_elm_lang$core$Native_List.fromArray(
							[]))
					])),
				A2(
				_elm_lang$html$Html$div,
				_elm_lang$core$Native_List.fromArray(
					[
						_elm_lang$html$Html_Attributes$class('pure-u-1 pure-u-md-1-2')
					]),
				_elm_lang$core$Native_List.fromArray(
					[
						A2(
						_elm_lang$html$Html$label,
						_elm_lang$core$Native_List.fromArray(
							[
								_elm_lang$html$Html_Attributes$for('emailAddress')
							]),
						_elm_lang$core$Native_List.fromArray(
							[
								_elm_lang$html$Html$text('Email Address')
							])),
						A2(
						_elm_lang$html$Html$input,
						_elm_lang$core$Native_List.fromArray(
							[
								_elm_lang$html$Html_Attributes$class('pure-u-23-24'),
								_elm_lang$html$Html_Attributes$id('emailAddress'),
								_elm_lang$html$Html_Attributes$type$('text'),
								_elm_lang$html$Html_Events$onInput(_user$project$LawyerSignUp$EmailAddressInput),
								_elm_lang$html$Html_Attributes$value(model.account.emailAddress)
							]),
						_elm_lang$core$Native_List.fromArray(
							[]))
					])),
				A2(
				_elm_lang$html$Html$div,
				_elm_lang$core$Native_List.fromArray(
					[
						_elm_lang$html$Html_Attributes$class('pure-u-1 pure-u-md-1-2')
					]),
				_elm_lang$core$Native_List.fromArray(
					[
						A2(
						_elm_lang$html$Html$label,
						_elm_lang$core$Native_List.fromArray(
							[
								_elm_lang$html$Html_Attributes$for('lastName')
							]),
						_elm_lang$core$Native_List.fromArray(
							[
								_elm_lang$html$Html$text('Last Name')
							])),
						A2(
						_elm_lang$html$Html$input,
						_elm_lang$core$Native_List.fromArray(
							[
								_elm_lang$html$Html_Attributes$class('pure-u-23-24'),
								_elm_lang$html$Html_Attributes$id('lastName'),
								_elm_lang$html$Html_Attributes$type$('text'),
								_elm_lang$html$Html_Events$onInput(_user$project$LawyerSignUp$LastNameInput),
								_elm_lang$html$Html_Attributes$value(model.account.lastName)
							]),
						_elm_lang$core$Native_List.fromArray(
							[]))
					])),
				A2(
				_elm_lang$html$Html$div,
				_elm_lang$core$Native_List.fromArray(
					[
						_elm_lang$html$Html_Attributes$class('pure-u-1 pure-u-md-1-2')
					]),
				_elm_lang$core$Native_List.fromArray(
					[
						A2(
						_elm_lang$html$Html$label,
						_elm_lang$core$Native_List.fromArray(
							[
								_elm_lang$html$Html_Attributes$for('password')
							]),
						_elm_lang$core$Native_List.fromArray(
							[
								_elm_lang$html$Html$text('Password')
							])),
						A2(
						_elm_lang$html$Html$input,
						_elm_lang$core$Native_List.fromArray(
							[
								_elm_lang$html$Html_Attributes$class('pure-u-23-24'),
								_elm_lang$html$Html_Attributes$id('password'),
								_elm_lang$html$Html_Attributes$type$('text'),
								_elm_lang$html$Html_Events$onInput(_user$project$LawyerSignUp$PasswordInput),
								_elm_lang$html$Html_Attributes$value(model.account.password)
							]),
						_elm_lang$core$Native_List.fromArray(
							[]))
					])),
				A2(
				_elm_lang$html$Html$div,
				_elm_lang$core$Native_List.fromArray(
					[
						_elm_lang$html$Html_Attributes$class('pure-u-1 pure-u-md-1-2')
					]),
				_elm_lang$core$Native_List.fromArray(
					[
						A2(
						_elm_lang$html$Html$label,
						_elm_lang$core$Native_List.fromArray(
							[
								_elm_lang$html$Html_Attributes$for('phoneNumber')
							]),
						_elm_lang$core$Native_List.fromArray(
							[
								_elm_lang$html$Html$text('Phone Number (optional)')
							])),
						A2(
						_elm_lang$html$Html$input,
						_elm_lang$core$Native_List.fromArray(
							[
								_elm_lang$html$Html_Attributes$class('pure-u-23-24'),
								_elm_lang$html$Html_Attributes$id('phoneNumber'),
								_elm_lang$html$Html_Attributes$type$('text'),
								_elm_lang$html$Html_Events$onInput(_user$project$LawyerSignUp$PhoneNumberInput),
								_elm_lang$html$Html_Attributes$value(model.account.phoneNumber)
							]),
						_elm_lang$core$Native_List.fromArray(
							[]))
					])),
				A2(
				_elm_lang$html$Html$div,
				_elm_lang$core$Native_List.fromArray(
					[
						_elm_lang$html$Html_Attributes$class('pure-u-1 pure-u-md-1-2')
					]),
				_elm_lang$core$Native_List.fromArray(
					[
						A2(
						_elm_lang$html$Html$label,
						_elm_lang$core$Native_List.fromArray(
							[
								_elm_lang$html$Html_Attributes$for('passwordConfirm')
							]),
						_elm_lang$core$Native_List.fromArray(
							[
								_elm_lang$html$Html$text('Confirm Password')
							])),
						A2(
						_elm_lang$html$Html$input,
						_elm_lang$core$Native_List.fromArray(
							[
								_elm_lang$html$Html_Attributes$class('pure-u-23-24'),
								_elm_lang$html$Html_Attributes$id('passwordConfirm'),
								_elm_lang$html$Html_Attributes$type$('text'),
								_elm_lang$html$Html_Events$onInput(_user$project$LawyerSignUp$PasswordConfirmInput),
								_elm_lang$html$Html_Attributes$value(model.account.passwordConfirm)
							]),
						_elm_lang$core$Native_List.fromArray(
							[]))
					]))
			]));
};
var _user$project$LawyerSignUp$view = function (model) {
	return A2(
		_elm_lang$html$Html$form,
		_elm_lang$core$Native_List.fromArray(
			[
				_elm_lang$html$Html_Attributes$class('pure-form pure-form-stacked')
			]),
		_elm_lang$core$Native_List.fromArray(
			[
				A2(
				_elm_lang$html$Html$fieldset,
				_elm_lang$core$Native_List.fromArray(
					[]),
				_elm_lang$core$Native_List.fromArray(
					[
						_user$project$LawyerSignUp$accountSection(model),
						_user$project$LawyerSignUp$profileSection(model)
					]))
			]));
};
var _user$project$LawyerSignUp$main = {
	main: _elm_lang$html$Html_App$beginnerProgram(
		{model: _user$project$LawyerSignUp$initModel, update: _user$project$LawyerSignUp$update, view: _user$project$LawyerSignUp$view})
};
